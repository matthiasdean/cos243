{"remainingRequest":"/mnt/c/Users/matth/git/cos243/ride-share/node_modules/babel-loader/lib/index.js!/mnt/c/Users/matth/git/cos243/ride-share/node_modules/vuetify/lib/components/VExpansionPanel/VExpansionPanel.js","dependencies":[{"path":"/mnt/c/Users/matth/git/cos243/ride-share/node_modules/vuetify/lib/components/VExpansionPanel/VExpansionPanel.js","mtime":1605643973821},{"path":"/mnt/c/Users/matth/git/cos243/ride-share/node_modules/cache-loader/dist/cjs.js","mtime":1605136929726},{"path":"/mnt/c/Users/matth/git/cos243/ride-share/node_modules/babel-loader/lib/index.js","mtime":1605643974154}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8gTWl4aW5zCmltcG9ydCB7IGZhY3RvcnkgYXMgR3JvdXBhYmxlRmFjdG9yeSB9IGZyb20gJy4uLy4uL21peGlucy9ncm91cGFibGUnOwppbXBvcnQgeyBwcm92aWRlIGFzIFJlZ2lzdHJhYmxlUHJvdmlkZSB9IGZyb20gJy4uLy4uL21peGlucy9yZWdpc3RyYWJsZSc7IC8vIFV0aWxpdGllcwoKaW1wb3J0IHsgZ2V0U2xvdCB9IGZyb20gJy4uLy4uL3V0aWwvaGVscGVycyc7CmltcG9ydCBtaXhpbnMgZnJvbSAnLi4vLi4vdXRpbC9taXhpbnMnOwpleHBvcnQgZGVmYXVsdCBtaXhpbnMoR3JvdXBhYmxlRmFjdG9yeSgnZXhwYW5zaW9uUGFuZWxzJywgJ3YtZXhwYW5zaW9uLXBhbmVsJywgJ3YtZXhwYW5zaW9uLXBhbmVscycpLCBSZWdpc3RyYWJsZVByb3ZpZGUoJ2V4cGFuc2lvblBhbmVsJywgdHJ1ZSkKLyogQHZ1ZS9jb21wb25lbnQgKi8KKS5leHRlbmQoewogIG5hbWU6ICd2LWV4cGFuc2lvbi1wYW5lbCcsCiAgcHJvcHM6IHsKICAgIGRpc2FibGVkOiBCb29sZWFuLAogICAgcmVhZG9ubHk6IEJvb2xlYW4KICB9LAoKICBkYXRhKCkgewogICAgcmV0dXJuIHsKICAgICAgY29udGVudDogbnVsbCwKICAgICAgaGVhZGVyOiBudWxsLAogICAgICBuZXh0SXNBY3RpdmU6IGZhbHNlCiAgICB9OwogIH0sCgogIGNvbXB1dGVkOiB7CiAgICBjbGFzc2VzKCkgewogICAgICByZXR1cm4gewogICAgICAgICd2LWV4cGFuc2lvbi1wYW5lbC0tYWN0aXZlJzogdGhpcy5pc0FjdGl2ZSwKICAgICAgICAndi1leHBhbnNpb24tcGFuZWwtLW5leHQtYWN0aXZlJzogdGhpcy5uZXh0SXNBY3RpdmUsCiAgICAgICAgJ3YtZXhwYW5zaW9uLXBhbmVsLS1kaXNhYmxlZCc6IHRoaXMuaXNEaXNhYmxlZCwKICAgICAgICAuLi50aGlzLmdyb3VwQ2xhc3NlcwogICAgICB9OwogICAgfSwKCiAgICBpc0Rpc2FibGVkKCkgewogICAgICByZXR1cm4gdGhpcy5leHBhbnNpb25QYW5lbHMuZGlzYWJsZWQgfHwgdGhpcy5kaXNhYmxlZDsKICAgIH0sCgogICAgaXNSZWFkb25seSgpIHsKICAgICAgcmV0dXJuIHRoaXMuZXhwYW5zaW9uUGFuZWxzLnJlYWRvbmx5IHx8IHRoaXMucmVhZG9ubHk7CiAgICB9CgogIH0sCiAgbWV0aG9kczogewogICAgcmVnaXN0ZXJDb250ZW50KHZtKSB7CiAgICAgIHRoaXMuY29udGVudCA9IHZtOwogICAgfSwKCiAgICB1bnJlZ2lzdGVyQ29udGVudCgpIHsKICAgICAgdGhpcy5jb250ZW50ID0gbnVsbDsKICAgIH0sCgogICAgcmVnaXN0ZXJIZWFkZXIodm0pIHsKICAgICAgdGhpcy5oZWFkZXIgPSB2bTsKICAgICAgdm0uJG9uKCdjbGljaycsIHRoaXMub25DbGljayk7CiAgICB9LAoKICAgIHVucmVnaXN0ZXJIZWFkZXIoKSB7CiAgICAgIHRoaXMuaGVhZGVyID0gbnVsbDsKICAgIH0sCgogICAgb25DbGljayhlKSB7CiAgICAgIGlmIChlLmRldGFpbCkgdGhpcy5oZWFkZXIuJGVsLmJsdXIoKTsKICAgICAgdGhpcy4kZW1pdCgnY2xpY2snLCBlKTsKICAgICAgdGhpcy5pc1JlYWRvbmx5IHx8IHRoaXMuaXNEaXNhYmxlZCB8fCB0aGlzLnRvZ2dsZSgpOwogICAgfSwKCiAgICB0b2dnbGUoKSB7CiAgICAgIC8qIGlzdGFuYnVsIGlnbm9yZSBlbHNlICovCiAgICAgIGlmICh0aGlzLmNvbnRlbnQpIHRoaXMuY29udGVudC5pc0Jvb3RlZCA9IHRydWU7CiAgICAgIHRoaXMuJG5leHRUaWNrKCgpID0+IHRoaXMuJGVtaXQoJ2NoYW5nZScpKTsKICAgIH0KCiAgfSwKCiAgcmVuZGVyKGgpIHsKICAgIHJldHVybiBoKCdkaXYnLCB7CiAgICAgIHN0YXRpY0NsYXNzOiAndi1leHBhbnNpb24tcGFuZWwnLAogICAgICBjbGFzczogdGhpcy5jbGFzc2VzLAogICAgICBhdHRyczogewogICAgICAgICdhcmlhLWV4cGFuZGVkJzogU3RyaW5nKHRoaXMuaXNBY3RpdmUpCiAgICAgIH0KICAgIH0sIGdldFNsb3QodGhpcykpOwogIH0KCn0pOw=="},{"version":3,"sources":["../../../src/components/VExpansionPanel/VExpansionPanel.ts"],"names":[],"mappings":"AAKA;AACA,SAAS,OAAO,IAAhB,gBAAA,QAAA,wBAAA;AACA,SAAS,OAAO,IAAhB,kBAAA,QAAA,0BAAA,C,CAEA;;AACA,SAAA,OAAA,QAAA,oBAAA;AACA,OAAA,MAAA,MAAA,mBAAA;AAQA,eAAe,MAAM,CACnB,gBAAgB,CAAA,iBAAA,EAAA,mBAAA,EADG,oBACH,CADG,EAEnB,kBAAkB,CAAA,gBAAA,EAAA,IAAA;AAClB;AAHmB,CAAN,CAAA,MAAA,CAIN;AACP,EAAA,IAAI,EADG,mBAAA;AAGP,EAAA,KAAK,EAAE;AACL,IAAA,QAAQ,EADH,OAAA;AAEL,IAAA,QAAQ,EAAE;AAFL,GAHA;;AAQP,EAAA,IAAI,GAAA;AACF,WAAO;AACL,MAAA,OAAO,EADF,IAAA;AAEL,MAAA,MAAM,EAFD,IAAA;AAGL,MAAA,YAAY,EAAE;AAHT,KAAP;AATK,GAAA;;AAgBP,EAAA,QAAQ,EAAE;AACR,IAAA,OAAO,GAAA;AACL,aAAO;AACL,qCAA6B,KADxB,QAAA;AAEL,0CAAkC,KAF7B,YAAA;AAGL,uCAA+B,KAH1B,UAAA;AAIL,WAAG,KAAK;AAJH,OAAP;AAFM,KAAA;;AASR,IAAA,UAAU,GAAA;AACR,aAAO,KAAA,eAAA,CAAA,QAAA,IAAiC,KAAxC,QAAA;AAVM,KAAA;;AAYR,IAAA,UAAU,GAAA;AACR,aAAO,KAAA,eAAA,CAAA,QAAA,IAAiC,KAAxC,QAAA;AACD;;AAdO,GAhBH;AAiCP,EAAA,OAAO,EAAE;AACP,IAAA,eAAe,CAAA,EAAA,EAAoC;AACjD,WAAA,OAAA,GAAA,EAAA;AAFK,KAAA;;AAIP,IAAA,iBAAiB,GAAA;AACf,WAAA,OAAA,GAAA,IAAA;AALK,KAAA;;AAOP,IAAA,cAAc,CAAA,EAAA,EAAmC;AAC/C,WAAA,MAAA,GAAA,EAAA;AACA,MAAA,EAAE,CAAF,GAAA,CAAA,OAAA,EAAgB,KAAhB,OAAA;AATK,KAAA;;AAWP,IAAA,gBAAgB,GAAA;AACd,WAAA,MAAA,GAAA,IAAA;AAZK,KAAA;;AAcP,IAAA,OAAO,CAAA,CAAA,EAAe;AACpB,UAAI,CAAC,CAAL,MAAA,EAAc,KAAA,MAAA,CAAA,GAAA,CAAA,IAAA;AAEd,WAAA,KAAA,CAAA,OAAA,EAAA,CAAA;AAEA,WAAA,UAAA,IAAmB,KAAnB,UAAA,IAAsC,KAAtC,MAAsC,EAAtC;AAnBK,KAAA;;AAqBP,IAAA,MAAM,GAAA;AACJ;AACA,UAAI,KAAJ,OAAA,EAAkB,KAAA,OAAA,CAAA,QAAA,GAAA,IAAA;AAClB,WAAA,SAAA,CAAe,MAAM,KAAA,KAAA,CAArB,QAAqB,CAArB;AACD;;AAzBM,GAjCF;;AA6DP,EAAA,MAAM,CAAA,CAAA,EAAG;AACP,WAAO,CAAC,CAAA,KAAA,EAAQ;AACd,MAAA,WAAW,EADG,mBAAA;AAEd,MAAA,KAAK,EAAE,KAFO,OAAA;AAGd,MAAA,KAAK,EAAE;AACL,yBAAiB,MAAM,CAAC,KAAD,QAAA;AADlB;AAHO,KAAR,EAML,OAAO,CANV,IAMU,CANF,CAAR;AAOD;;AArEM,CAJM,CAAf","sourcesContent":["// Components\nimport VExpansionPanels from './VExpansionPanels'\nimport VExpansionPanelHeader from './VExpansionPanelHeader'\nimport VExpansionPanelContent from './VExpansionPanelContent'\n\n// Mixins\nimport { factory as GroupableFactory } from '../../mixins/groupable'\nimport { provide as RegistrableProvide } from '../../mixins/registrable'\n\n// Utilities\nimport { getSlot } from '../../util/helpers'\nimport mixins from '../../util/mixins'\n\n// Types\nimport { VNode } from 'vue'\n\ntype VExpansionPanelHeaderInstance = InstanceType<typeof VExpansionPanelHeader>\ntype VExpansionPanelContentInstance = InstanceType<typeof VExpansionPanelContent>\n\nexport default mixins(\n  GroupableFactory<'expansionPanels', typeof VExpansionPanels>('expansionPanels', 'v-expansion-panel', 'v-expansion-panels'),\n  RegistrableProvide('expansionPanel', true)\n  /* @vue/component */\n).extend({\n  name: 'v-expansion-panel',\n\n  props: {\n    disabled: Boolean,\n    readonly: Boolean,\n  },\n\n  data () {\n    return {\n      content: null as VExpansionPanelContentInstance | null,\n      header: null as VExpansionPanelHeaderInstance | null,\n      nextIsActive: false,\n    }\n  },\n\n  computed: {\n    classes (): object {\n      return {\n        'v-expansion-panel--active': this.isActive,\n        'v-expansion-panel--next-active': this.nextIsActive,\n        'v-expansion-panel--disabled': this.isDisabled,\n        ...this.groupClasses,\n      }\n    },\n    isDisabled (): boolean {\n      return this.expansionPanels.disabled || this.disabled\n    },\n    isReadonly (): boolean {\n      return this.expansionPanels.readonly || this.readonly\n    },\n  },\n\n  methods: {\n    registerContent (vm: VExpansionPanelContentInstance) {\n      this.content = vm\n    },\n    unregisterContent () {\n      this.content = null\n    },\n    registerHeader (vm: VExpansionPanelHeaderInstance) {\n      this.header = vm\n      vm.$on('click', this.onClick)\n    },\n    unregisterHeader () {\n      this.header = null\n    },\n    onClick (e: MouseEvent) {\n      if (e.detail) this.header!.$el.blur()\n\n      this.$emit('click', e)\n\n      this.isReadonly || this.isDisabled || this.toggle()\n    },\n    toggle () {\n      /* istanbul ignore else */\n      if (this.content) this.content.isBooted = true\n      this.$nextTick(() => this.$emit('change'))\n    },\n  },\n\n  render (h): VNode {\n    return h('div', {\n      staticClass: 'v-expansion-panel',\n      class: this.classes,\n      attrs: {\n        'aria-expanded': String(this.isActive),\n      },\n    }, getSlot(this))\n  },\n})\n"],"sourceRoot":""}]}