{"remainingRequest":"/mnt/c/Users/matth/git/cos243/ride-share/node_modules/babel-loader/lib/index.js!/mnt/c/Users/matth/git/cos243/ride-share/node_modules/vuetify/lib/components/VCalendar/mixins/times.js","dependencies":[{"path":"/mnt/c/Users/matth/git/cos243/ride-share/node_modules/vuetify/lib/components/VCalendar/mixins/times.js","mtime":1605643973821},{"path":"/mnt/c/Users/matth/git/cos243/ride-share/node_modules/cache-loader/dist/cjs.js","mtime":1605136929726},{"path":"/mnt/c/Users/matth/git/cos243/ride-share/node_modules/babel-loader/lib/index.js","mtime":1605643974154}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IFZ1ZSBmcm9tICd2dWUnOwppbXBvcnQgeyB2YWxpZGF0ZVRpbWVzdGFtcCwgcGFyc2VUaW1lc3RhbXAsIHBhcnNlRGF0ZSB9IGZyb20gJy4uL3V0aWwvdGltZXN0YW1wJzsKZXhwb3J0IGRlZmF1bHQgVnVlLmV4dGVuZCh7CiAgbmFtZTogJ3RpbWVzJywKICBwcm9wczogewogICAgbm93OiB7CiAgICAgIHR5cGU6IFN0cmluZywKICAgICAgdmFsaWRhdG9yOiB2YWxpZGF0ZVRpbWVzdGFtcAogICAgfQogIH0sCiAgZGF0YTogKCkgPT4gKHsKICAgIHRpbWVzOiB7CiAgICAgIG5vdzogcGFyc2VUaW1lc3RhbXAoJzAwMDAtMDAtMDAgMDA6MDAnLCB0cnVlKSwKICAgICAgdG9kYXk6IHBhcnNlVGltZXN0YW1wKCcwMDAwLTAwLTAwJywgdHJ1ZSkKICAgIH0KICB9KSwKICBjb21wdXRlZDogewogICAgcGFyc2VkTm93KCkgewogICAgICByZXR1cm4gdGhpcy5ub3cgPyBwYXJzZVRpbWVzdGFtcCh0aGlzLm5vdywgdHJ1ZSkgOiBudWxsOwogICAgfQoKICB9LAogIHdhdGNoOiB7CiAgICBwYXJzZWROb3c6ICd1cGRhdGVUaW1lcycKICB9LAoKICBjcmVhdGVkKCkgewogICAgdGhpcy51cGRhdGVUaW1lcygpOwogICAgdGhpcy5zZXRQcmVzZW50KCk7CiAgfSwKCiAgbWV0aG9kczogewogICAgc2V0UHJlc2VudCgpIHsKICAgICAgdGhpcy50aW1lcy5ub3cucHJlc2VudCA9IHRoaXMudGltZXMudG9kYXkucHJlc2VudCA9IHRydWU7CiAgICAgIHRoaXMudGltZXMubm93LnBhc3QgPSB0aGlzLnRpbWVzLnRvZGF5LnBhc3QgPSBmYWxzZTsKICAgICAgdGhpcy50aW1lcy5ub3cuZnV0dXJlID0gdGhpcy50aW1lcy50b2RheS5mdXR1cmUgPSBmYWxzZTsKICAgIH0sCgogICAgdXBkYXRlVGltZXMoKSB7CiAgICAgIGNvbnN0IG5vdyA9IHRoaXMucGFyc2VkTm93IHx8IHRoaXMuZ2V0Tm93KCk7CiAgICAgIHRoaXMudXBkYXRlRGF5KG5vdywgdGhpcy50aW1lcy5ub3cpOwogICAgICB0aGlzLnVwZGF0ZVRpbWUobm93LCB0aGlzLnRpbWVzLm5vdyk7CiAgICAgIHRoaXMudXBkYXRlRGF5KG5vdywgdGhpcy50aW1lcy50b2RheSk7CiAgICB9LAoKICAgIGdldE5vdygpIHsKICAgICAgcmV0dXJuIHBhcnNlRGF0ZShuZXcgRGF0ZSgpKTsKICAgIH0sCgogICAgdXBkYXRlRGF5KG5vdywgdGFyZ2V0KSB7CiAgICAgIGlmIChub3cuZGF0ZSAhPT0gdGFyZ2V0LmRhdGUpIHsKICAgICAgICB0YXJnZXQueWVhciA9IG5vdy55ZWFyOwogICAgICAgIHRhcmdldC5tb250aCA9IG5vdy5tb250aDsKICAgICAgICB0YXJnZXQuZGF5ID0gbm93LmRheTsKICAgICAgICB0YXJnZXQud2Vla2RheSA9IG5vdy53ZWVrZGF5OwogICAgICAgIHRhcmdldC5kYXRlID0gbm93LmRhdGU7CiAgICAgIH0KICAgIH0sCgogICAgdXBkYXRlVGltZShub3csIHRhcmdldCkgewogICAgICBpZiAobm93LnRpbWUgIT09IHRhcmdldC50aW1lKSB7CiAgICAgICAgdGFyZ2V0LmhvdXIgPSBub3cuaG91cjsKICAgICAgICB0YXJnZXQubWludXRlID0gbm93Lm1pbnV0ZTsKICAgICAgICB0YXJnZXQudGltZSA9IG5vdy50aW1lOwogICAgICB9CiAgICB9CgogIH0KfSk7"},{"version":3,"sources":["../../../../src/components/VCalendar/mixins/times.ts"],"names":[],"mappings":"AAAA,OAAA,GAAA,MAAA,KAAA;AAEA,SAAA,iBAAA,EAAA,cAAA,EAAA,SAAA,QAAA,mBAAA;AAOA,eAAe,GAAG,CAAH,MAAA,CAAW;AACxB,EAAA,IAAI,EADoB,OAAA;AAGxB,EAAA,KAAK,EAAE;AACL,IAAA,GAAG,EAAE;AACH,MAAA,IAAI,EADD,MAAA;AAEH,MAAA,SAAS,EAAE;AAFR;AADA,GAHiB;AAUxB,EAAA,IAAI,EAAE,OAAO;AACX,IAAA,KAAK,EAAE;AACL,MAAA,GAAG,EAAE,cAAc,CAAA,kBAAA,EADd,IACc,CADd;AAEL,MAAA,KAAK,EAAE,cAAc,CAAA,YAAA,EAAA,IAAA;AAFhB;AADI,GAAP,CAVkB;AAiBxB,EAAA,QAAQ,EAAE;AACR,IAAA,SAAS,GAAA;AACP,aAAO,KAAA,GAAA,GAAW,cAAc,CAAC,KAAD,GAAA,EAAzB,IAAyB,CAAzB,GAAP,IAAA;AACD;;AAHO,GAjBc;AAuBxB,EAAA,KAAK,EAAE;AACL,IAAA,SAAS,EAAE;AADN,GAvBiB;;AA2BxB,EAAA,OAAO,GAAA;AACL,SAAA,WAAA;AACA,SAAA,UAAA;AA7BsB,GAAA;;AAgCxB,EAAA,OAAO,EAAE;AACP,IAAA,UAAU,GAAA;AACR,WAAA,KAAA,CAAA,GAAA,CAAA,OAAA,GAAyB,KAAA,KAAA,CAAA,KAAA,CAAA,OAAA,GAAzB,IAAA;AACA,WAAA,KAAA,CAAA,GAAA,CAAA,IAAA,GAAsB,KAAA,KAAA,CAAA,KAAA,CAAA,IAAA,GAAtB,KAAA;AACA,WAAA,KAAA,CAAA,GAAA,CAAA,MAAA,GAAwB,KAAA,KAAA,CAAA,KAAA,CAAA,MAAA,GAAxB,KAAA;AAJK,KAAA;;AAMP,IAAA,WAAW,GAAA;AACT,YAAM,GAAG,GAAsB,KAAA,SAAA,IAAkB,KAAjD,MAAiD,EAAjD;AACA,WAAA,SAAA,CAAA,GAAA,EAAoB,KAAA,KAAA,CAApB,GAAA;AACA,WAAA,UAAA,CAAA,GAAA,EAAqB,KAAA,KAAA,CAArB,GAAA;AACA,WAAA,SAAA,CAAA,GAAA,EAAoB,KAAA,KAAA,CAApB,KAAA;AAVK,KAAA;;AAYP,IAAA,MAAM,GAAA;AACJ,aAAO,SAAS,CAAC,IAAjB,IAAiB,EAAD,CAAhB;AAbK,KAAA;;AAeP,IAAA,SAAS,CAAA,GAAA,EAAA,MAAA,EAAmD;AAC1D,UAAI,GAAG,CAAH,IAAA,KAAa,MAAM,CAAvB,IAAA,EAA8B;AAC5B,QAAA,MAAM,CAAN,IAAA,GAAc,GAAG,CAAjB,IAAA;AACA,QAAA,MAAM,CAAN,KAAA,GAAe,GAAG,CAAlB,KAAA;AACA,QAAA,MAAM,CAAN,GAAA,GAAa,GAAG,CAAhB,GAAA;AACA,QAAA,MAAM,CAAN,OAAA,GAAiB,GAAG,CAApB,OAAA;AACA,QAAA,MAAM,CAAN,IAAA,GAAc,GAAG,CAAjB,IAAA;AACD;AAtBI,KAAA;;AAwBP,IAAA,UAAU,CAAA,GAAA,EAAA,MAAA,EAAmD;AAC3D,UAAI,GAAG,CAAH,IAAA,KAAa,MAAM,CAAvB,IAAA,EAA8B;AAC5B,QAAA,MAAM,CAAN,IAAA,GAAc,GAAG,CAAjB,IAAA;AACA,QAAA,MAAM,CAAN,MAAA,GAAgB,GAAG,CAAnB,MAAA;AACA,QAAA,MAAM,CAAN,IAAA,GAAc,GAAG,CAAjB,IAAA;AACD;AACF;;AA9BM;AAhCe,CAAX,CAAf","sourcesContent":["import Vue from 'vue'\n\nimport {\n  validateTimestamp,\n  parseTimestamp,\n  parseDate,\n} from '../util/timestamp'\nimport { CalendarTimestamp } from 'vuetify/types'\n\nexport default Vue.extend({\n  name: 'times',\n\n  props: {\n    now: {\n      type: String,\n      validator: validateTimestamp,\n    },\n  },\n\n  data: () => ({\n    times: {\n      now: parseTimestamp('0000-00-00 00:00', true),\n      today: parseTimestamp('0000-00-00', true),\n    },\n  }),\n\n  computed: {\n    parsedNow (): CalendarTimestamp | null {\n      return this.now ? parseTimestamp(this.now, true) : null\n    },\n  },\n\n  watch: {\n    parsedNow: 'updateTimes',\n  },\n\n  created () {\n    this.updateTimes()\n    this.setPresent()\n  },\n\n  methods: {\n    setPresent (): void {\n      this.times.now.present = this.times.today.present = true\n      this.times.now.past = this.times.today.past = false\n      this.times.now.future = this.times.today.future = false\n    },\n    updateTimes (): void {\n      const now: CalendarTimestamp = this.parsedNow || this.getNow()\n      this.updateDay(now, this.times.now)\n      this.updateTime(now, this.times.now)\n      this.updateDay(now, this.times.today)\n    },\n    getNow (): CalendarTimestamp {\n      return parseDate(new Date())\n    },\n    updateDay (now: CalendarTimestamp, target: CalendarTimestamp): void {\n      if (now.date !== target.date) {\n        target.year = now.year\n        target.month = now.month\n        target.day = now.day\n        target.weekday = now.weekday\n        target.date = now.date\n      }\n    },\n    updateTime (now: CalendarTimestamp, target: CalendarTimestamp): void {\n      if (now.time !== target.time) {\n        target.hour = now.hour\n        target.minute = now.minute\n        target.time = now.time\n      }\n    },\n  },\n})\n"],"sourceRoot":""}]}