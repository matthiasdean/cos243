{"remainingRequest":"/mnt/c/Users/matth/git/cos243/ride-share/node_modules/babel-loader/lib/index.js!/mnt/c/Users/matth/git/cos243/ride-share/node_modules/vuetify/lib/mixins/bootable/index.js","dependencies":[{"path":"/mnt/c/Users/matth/git/cos243/ride-share/node_modules/vuetify/lib/mixins/bootable/index.js","mtime":1605643973821},{"path":"/mnt/c/Users/matth/git/cos243/ride-share/node_modules/cache-loader/dist/cjs.js","mtime":1605136929726},{"path":"/mnt/c/Users/matth/git/cos243/ride-share/node_modules/babel-loader/lib/index.js","mtime":1605643974154}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8gVXRpbGl0aWVzCmltcG9ydCB7IHJlbW92ZWQgfSBmcm9tICcuLi8uLi91dGlsL2NvbnNvbGUnOyAvLyBUeXBlcwoKaW1wb3J0IFZ1ZSBmcm9tICd2dWUnOwovKioKICogQm9vdGFibGUKICogQG1peGluCiAqCiAqIFVzZWQgdG8gYWRkIGxhenkgY29udGVudCBmdW5jdGlvbmFsaXR5IHRvIGNvbXBvbmVudHMKICogTG9va3MgZm9yIGNoYW5nZSBpbiAiaXNBY3RpdmUiIHRvIGF1dG9tYXRpY2FsbHkgYm9vdAogKiBPdGhlcndpc2UgY2FuIGJlIHNldCBtYW51YWxseQogKi8KCi8qIEB2dWUvY29tcG9uZW50ICovCgpleHBvcnQgZGVmYXVsdCBWdWUuZXh0ZW5kKCkuZXh0ZW5kKHsKICBuYW1lOiAnYm9vdGFibGUnLAogIHByb3BzOiB7CiAgICBlYWdlcjogQm9vbGVhbgogIH0sCiAgZGF0YTogKCkgPT4gKHsKICAgIGlzQm9vdGVkOiBmYWxzZQogIH0pLAogIGNvbXB1dGVkOiB7CiAgICBoYXNDb250ZW50KCkgewogICAgICByZXR1cm4gdGhpcy5pc0Jvb3RlZCB8fCB0aGlzLmVhZ2VyIHx8IHRoaXMuaXNBY3RpdmU7CiAgICB9CgogIH0sCiAgd2F0Y2g6IHsKICAgIGlzQWN0aXZlKCkgewogICAgICB0aGlzLmlzQm9vdGVkID0gdHJ1ZTsKICAgIH0KCiAgfSwKCiAgY3JlYXRlZCgpIHsKICAgIC8qIGlzdGFuYnVsIGlnbm9yZSBuZXh0ICovCiAgICBpZiAoJ2xhenknIGluIHRoaXMuJGF0dHJzKSB7CiAgICAgIHJlbW92ZWQoJ2xhenknLCB0aGlzKTsKICAgIH0KICB9LAoKICBtZXRob2RzOiB7CiAgICBzaG93TGF6eUNvbnRlbnQoY29udGVudCkgewogICAgICByZXR1cm4gdGhpcy5oYXNDb250ZW50ICYmIGNvbnRlbnQgPyBjb250ZW50KCkgOiBbdGhpcy4kY3JlYXRlRWxlbWVudCgpXTsKICAgIH0KCiAgfQp9KTs="},{"version":3,"sources":["../../../src/mixins/bootable/index.ts"],"names":[],"mappings":"AAAA;AACA,SAAA,OAAA,QAAA,oBAAA,C,CAEA;;AACA,OAAA,GAAA,MAAA,KAAA;AAKA;;;;;;;;;AAQA;;AACA,eAAe,GAAG,CAAH,MAAA,GAAA,MAAA,CAAsC;AACnD,EAAA,IAAI,EAD+C,UAAA;AAGnD,EAAA,KAAK,EAAE;AACL,IAAA,KAAK,EAAE;AADF,GAH4C;AAOnD,EAAA,IAAI,EAAE,OAAO;AACX,IAAA,QAAQ,EAAE;AADC,GAAP,CAP6C;AAWnD,EAAA,QAAQ,EAAE;AACR,IAAA,UAAU,GAAA;AACR,aAAO,KAAA,QAAA,IAAiB,KAAjB,KAAA,IAA+B,KAAtC,QAAA;AACD;;AAHO,GAXyC;AAiBnD,EAAA,KAAK,EAAE;AACL,IAAA,QAAQ,GAAA;AACN,WAAA,QAAA,GAAA,IAAA;AACD;;AAHI,GAjB4C;;AAuBnD,EAAA,OAAO,GAAA;AACL;AACA,QAAI,UAAU,KAAd,MAAA,EAA2B;AACzB,MAAA,OAAO,CAAA,MAAA,EAAP,IAAO,CAAP;AACD;AA3BgD,GAAA;;AA8BnD,EAAA,OAAO,EAAE;AACP,IAAA,eAAe,CAAA,OAAA,EAAyB;AACtC,aAAQ,KAAA,UAAA,IAAD,OAAC,GAA8B,OAA/B,EAAC,GAA0C,CAAC,KAAnD,cAAmD,EAAD,CAAlD;AACD;;AAHM;AA9B0C,CAAtC,CAAf","sourcesContent":["// Utilities\nimport { removed } from '../../util/console'\n\n// Types\nimport Vue, { VNode } from 'vue'\ninterface Toggleable extends Vue {\n  isActive?: boolean\n}\n\n/**\n * Bootable\n * @mixin\n *\n * Used to add lazy content functionality to components\n * Looks for change in \"isActive\" to automatically boot\n * Otherwise can be set manually\n */\n/* @vue/component */\nexport default Vue.extend<Vue & Toggleable>().extend({\n  name: 'bootable',\n\n  props: {\n    eager: Boolean,\n  },\n\n  data: () => ({\n    isBooted: false,\n  }),\n\n  computed: {\n    hasContent (): boolean | undefined {\n      return this.isBooted || this.eager || this.isActive\n    },\n  },\n\n  watch: {\n    isActive () {\n      this.isBooted = true\n    },\n  },\n\n  created () {\n    /* istanbul ignore next */\n    if ('lazy' in this.$attrs) {\n      removed('lazy', this)\n    }\n  },\n\n  methods: {\n    showLazyContent (content?: () => VNode[]): VNode[] {\n      return (this.hasContent && content) ? content() : [this.$createElement()]\n    },\n  },\n})\n"],"sourceRoot":""}]}