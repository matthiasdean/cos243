{"remainingRequest":"/mnt/c/Users/matth/git/cos243/ride-share/node_modules/babel-loader/lib/index.js!/mnt/c/Users/matth/git/cos243/ride-share/node_modules/vuetify/lib/components/VExpansionPanel/VExpansionPanels.js","dependencies":[{"path":"/mnt/c/Users/matth/git/cos243/ride-share/node_modules/vuetify/lib/components/VExpansionPanel/VExpansionPanels.js","mtime":1605643973821},{"path":"/mnt/c/Users/matth/git/cos243/ride-share/node_modules/cache-loader/dist/cjs.js","mtime":1605136929726},{"path":"/mnt/c/Users/matth/git/cos243/ride-share/node_modules/babel-loader/lib/index.js","mtime":1605643974154}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8gU3R5bGVzCmltcG9ydCAiLi4vLi4vLi4vc3JjL2NvbXBvbmVudHMvVkV4cGFuc2lvblBhbmVsL1ZFeHBhbnNpb25QYW5lbC5zYXNzIjsgLy8gQ29tcG9uZW50cwoKaW1wb3J0IHsgQmFzZUl0ZW1Hcm91cCB9IGZyb20gJy4uL1ZJdGVtR3JvdXAvVkl0ZW1Hcm91cCc7IC8vIFV0aWxpdGllcwoKaW1wb3J0IHsgYnJlYWtpbmcgfSBmcm9tICcuLi8uLi91dGlsL2NvbnNvbGUnOwovKiBAdnVlL2NvbXBvbmVudCAqLwoKZXhwb3J0IGRlZmF1bHQgQmFzZUl0ZW1Hcm91cC5leHRlbmQoewogIG5hbWU6ICd2LWV4cGFuc2lvbi1wYW5lbHMnLAoKICBwcm92aWRlKCkgewogICAgcmV0dXJuIHsKICAgICAgZXhwYW5zaW9uUGFuZWxzOiB0aGlzCiAgICB9OwogIH0sCgogIHByb3BzOiB7CiAgICBhY2NvcmRpb246IEJvb2xlYW4sCiAgICBkaXNhYmxlZDogQm9vbGVhbiwKICAgIGZsYXQ6IEJvb2xlYW4sCiAgICBob3ZlcjogQm9vbGVhbiwKICAgIGZvY3VzYWJsZTogQm9vbGVhbiwKICAgIGluc2V0OiBCb29sZWFuLAogICAgcG9wb3V0OiBCb29sZWFuLAogICAgcmVhZG9ubHk6IEJvb2xlYW4sCiAgICB0aWxlOiBCb29sZWFuCiAgfSwKICBjb21wdXRlZDogewogICAgY2xhc3NlcygpIHsKICAgICAgcmV0dXJuIHsgLi4uQmFzZUl0ZW1Hcm91cC5vcHRpb25zLmNvbXB1dGVkLmNsYXNzZXMuY2FsbCh0aGlzKSwKICAgICAgICAndi1leHBhbnNpb24tcGFuZWxzJzogdHJ1ZSwKICAgICAgICAndi1leHBhbnNpb24tcGFuZWxzLS1hY2NvcmRpb24nOiB0aGlzLmFjY29yZGlvbiwKICAgICAgICAndi1leHBhbnNpb24tcGFuZWxzLS1mbGF0JzogdGhpcy5mbGF0LAogICAgICAgICd2LWV4cGFuc2lvbi1wYW5lbHMtLWhvdmVyJzogdGhpcy5ob3ZlciwKICAgICAgICAndi1leHBhbnNpb24tcGFuZWxzLS1mb2N1c2FibGUnOiB0aGlzLmZvY3VzYWJsZSwKICAgICAgICAndi1leHBhbnNpb24tcGFuZWxzLS1pbnNldCc6IHRoaXMuaW5zZXQsCiAgICAgICAgJ3YtZXhwYW5zaW9uLXBhbmVscy0tcG9wb3V0JzogdGhpcy5wb3BvdXQsCiAgICAgICAgJ3YtZXhwYW5zaW9uLXBhbmVscy0tdGlsZSc6IHRoaXMudGlsZQogICAgICB9OwogICAgfQoKICB9LAoKICBjcmVhdGVkKCkgewogICAgLyogaXN0YW5idWwgaWdub3JlIG5leHQgKi8KICAgIGlmICh0aGlzLiRhdHRycy5oYXNPd25Qcm9wZXJ0eSgnZXhwYW5kJykpIHsKICAgICAgYnJlYWtpbmcoJ2V4cGFuZCcsICdtdWx0aXBsZScsIHRoaXMpOwogICAgfQogICAgLyogaXN0YW5idWwgaWdub3JlIG5leHQgKi8KCgogICAgaWYgKEFycmF5LmlzQXJyYXkodGhpcy52YWx1ZSkgJiYgdGhpcy52YWx1ZS5sZW5ndGggPiAwICYmIHR5cGVvZiB0aGlzLnZhbHVlWzBdID09PSAnYm9vbGVhbicpIHsKICAgICAgYnJlYWtpbmcoJzp2YWx1ZT0iW3RydWUsIGZhbHNlLCB0cnVlXSInLCAnOnZhbHVlPSJbMCwgMl0iJywgdGhpcyk7CiAgICB9CiAgfSwKCiAgbWV0aG9kczogewogICAgdXBkYXRlSXRlbShpdGVtLCBpbmRleCkgewogICAgICBjb25zdCB2YWx1ZSA9IHRoaXMuZ2V0VmFsdWUoaXRlbSwgaW5kZXgpOwogICAgICBjb25zdCBuZXh0VmFsdWUgPSB0aGlzLmdldFZhbHVlKGl0ZW0sIGluZGV4ICsgMSk7CiAgICAgIGl0ZW0uaXNBY3RpdmUgPSB0aGlzLnRvZ2dsZU1ldGhvZCh2YWx1ZSk7CiAgICAgIGl0ZW0ubmV4dElzQWN0aXZlID0gdGhpcy50b2dnbGVNZXRob2QobmV4dFZhbHVlKTsKICAgIH0KCiAgfQp9KTs="},{"version":3,"sources":["../../../src/components/VExpansionPanel/VExpansionPanels.ts"],"names":[],"mappings":"AAAA;AACA,OAAA,8DAAA,C,CAEA;;AACA,SAAA,aAAA,QAAA,0BAAA,C,CAGA;;AACA,SAAA,QAAA,QAAA,oBAAA;AAKA;;AACA,eAAe,aAAa,CAAb,MAAA,CAAqB;AAClC,EAAA,IAAI,EAD8B,oBAAA;;AAGlC,EAAA,OAAO,GAAA;AACL,WAAO;AACL,MAAA,eAAe,EAAE;AADZ,KAAP;AAJgC,GAAA;;AASlC,EAAA,KAAK,EAAE;AACL,IAAA,SAAS,EADJ,OAAA;AAEL,IAAA,QAAQ,EAFH,OAAA;AAGL,IAAA,IAAI,EAHC,OAAA;AAIL,IAAA,KAAK,EAJA,OAAA;AAKL,IAAA,SAAS,EALJ,OAAA;AAML,IAAA,KAAK,EANA,OAAA;AAOL,IAAA,MAAM,EAPD,OAAA;AAQL,IAAA,QAAQ,EARH,OAAA;AASL,IAAA,IAAI,EAAE;AATD,GAT2B;AAqBlC,EAAA,QAAQ,EAAE;AACR,IAAA,OAAO,GAAA;AACL,aAAO,EACL,GAAG,aAAa,CAAb,OAAA,CAAA,QAAA,CAAA,OAAA,CAAA,IAAA,CADE,IACF,CADE;AAEL,8BAFK,IAAA;AAGL,yCAAiC,KAH5B,SAAA;AAIL,oCAA4B,KAJvB,IAAA;AAKL,qCAA6B,KALxB,KAAA;AAML,yCAAiC,KAN5B,SAAA;AAOL,qCAA6B,KAPxB,KAAA;AAQL,sCAA8B,KARzB,MAAA;AASL,oCAA4B,KAAK;AAT5B,OAAP;AAWD;;AAbO,GArBwB;;AAqClC,EAAA,OAAO,GAAA;AACL;AACA,QAAI,KAAA,MAAA,CAAA,cAAA,CAAJ,QAAI,CAAJ,EAA0C;AACxC,MAAA,QAAQ,CAAA,QAAA,EAAA,UAAA,EAAR,IAAQ,CAAR;AACD;AAED;;;AACA,QACE,KAAK,CAAL,OAAA,CAAc,KAAd,KAAA,KACA,KAAA,KAAA,CAAA,MAAA,GADA,CAAA,IAEA,OAAO,KAAA,KAAA,CAAP,CAAO,CAAP,KAHF,SAAA,EAIE;AACA,MAAA,QAAQ,CAAA,8BAAA,EAAA,iBAAA,EAAR,IAAQ,CAAR;AACD;AAlD+B,GAAA;;AAqDlC,EAAA,OAAO,EAAE;AACP,IAAA,UAAU,CAAA,IAAA,EAAA,KAAA,EAAkE;AAC1E,YAAM,KAAK,GAAG,KAAA,QAAA,CAAA,IAAA,EAAd,KAAc,CAAd;AACA,YAAM,SAAS,GAAG,KAAA,QAAA,CAAA,IAAA,EAAoB,KAAK,GAA3C,CAAkB,CAAlB;AAEA,MAAA,IAAI,CAAJ,QAAA,GAAgB,KAAA,YAAA,CAAhB,KAAgB,CAAhB;AACA,MAAA,IAAI,CAAJ,YAAA,GAAoB,KAAA,YAAA,CAApB,SAAoB,CAApB;AACD;;AAPM;AArDyB,CAArB,CAAf","sourcesContent":["// Styles\nimport './VExpansionPanel.sass'\n\n// Components\nimport { BaseItemGroup, GroupableInstance } from '../VItemGroup/VItemGroup'\nimport VExpansionPanel from './VExpansionPanel'\n\n// Utilities\nimport { breaking } from '../../util/console'\n\n// Types\ninterface VExpansionPanelInstance extends InstanceType<typeof VExpansionPanel> {}\n\n/* @vue/component */\nexport default BaseItemGroup.extend({\n  name: 'v-expansion-panels',\n\n  provide (): object {\n    return {\n      expansionPanels: this,\n    }\n  },\n\n  props: {\n    accordion: Boolean,\n    disabled: Boolean,\n    flat: Boolean,\n    hover: Boolean,\n    focusable: Boolean,\n    inset: Boolean,\n    popout: Boolean,\n    readonly: Boolean,\n    tile: Boolean,\n  },\n\n  computed: {\n    classes (): object {\n      return {\n        ...BaseItemGroup.options.computed.classes.call(this),\n        'v-expansion-panels': true,\n        'v-expansion-panels--accordion': this.accordion,\n        'v-expansion-panels--flat': this.flat,\n        'v-expansion-panels--hover': this.hover,\n        'v-expansion-panels--focusable': this.focusable,\n        'v-expansion-panels--inset': this.inset,\n        'v-expansion-panels--popout': this.popout,\n        'v-expansion-panels--tile': this.tile,\n      }\n    },\n  },\n\n  created () {\n    /* istanbul ignore next */\n    if (this.$attrs.hasOwnProperty('expand')) {\n      breaking('expand', 'multiple', this)\n    }\n\n    /* istanbul ignore next */\n    if (\n      Array.isArray(this.value) &&\n      this.value.length > 0 &&\n      typeof this.value[0] === 'boolean'\n    ) {\n      breaking(':value=\"[true, false, true]\"', ':value=\"[0, 2]\"', this)\n    }\n  },\n\n  methods: {\n    updateItem (item: GroupableInstance & VExpansionPanelInstance, index: number) {\n      const value = this.getValue(item, index)\n      const nextValue = this.getValue(item, index + 1)\n\n      item.isActive = this.toggleMethod(value)\n      item.nextIsActive = this.toggleMethod(nextValue)\n    },\n  },\n})\n"],"sourceRoot":""}]}