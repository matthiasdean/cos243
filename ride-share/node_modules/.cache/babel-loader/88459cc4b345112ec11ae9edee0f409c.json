{"remainingRequest":"/mnt/c/Users/matth/git/cos243/ride-share/node_modules/babel-loader/lib/index.js!/mnt/c/Users/matth/git/cos243/ride-share/node_modules/vuetify/lib/components/VTreeview/VTreeviewNode.js","dependencies":[{"path":"/mnt/c/Users/matth/git/cos243/ride-share/node_modules/vuetify/lib/components/VTreeview/VTreeviewNode.js","mtime":1605643973821},{"path":"/mnt/c/Users/matth/git/cos243/ride-share/node_modules/cache-loader/dist/cjs.js","mtime":1605136929726},{"path":"/mnt/c/Users/matth/git/cos243/ride-share/node_modules/babel-loader/lib/index.js","mtime":1605643974154}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["../../../src/components/VTreeview/VTreeviewNode.ts"],"names":[],"mappings":"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","sourcesContent":["// Components\nimport { VExpandTransition } from '../transitions'\nimport { VIcon } from '../VIcon'\nimport VTreeview from './VTreeview'\n\n// Mixins\nimport { inject as RegistrableInject } from '../../mixins/registrable'\nimport Colorable from '../../mixins/colorable'\n\n// Utils\nimport mixins, { ExtractVue } from '../../util/mixins'\nimport { getObjectValueByPath, createRange } from '../../util/helpers'\n\n// Types\nimport { VNode, VNodeChildren, PropType } from 'vue'\nimport { PropValidator } from 'vue/types/options'\n\ntype VTreeViewInstance = InstanceType<typeof VTreeview>\n\nconst baseMixins = mixins(\n  Colorable,\n  RegistrableInject('treeview')\n)\n\ninterface options extends ExtractVue<typeof baseMixins> {\n  treeview: VTreeViewInstance\n}\n\nexport const VTreeviewNodeProps = {\n  activatable: Boolean,\n  activeClass: {\n    type: String,\n    default: 'v-treeview-node--active',\n  },\n  color: {\n    type: String,\n    default: 'primary',\n  },\n  expandIcon: {\n    type: String,\n    default: '$subgroup',\n  },\n  indeterminateIcon: {\n    type: String,\n    default: '$checkboxIndeterminate',\n  },\n  itemChildren: {\n    type: String,\n    default: 'children',\n  },\n  itemDisabled: {\n    type: String,\n    default: 'disabled',\n  },\n  itemKey: {\n    type: String,\n    default: 'id',\n  },\n  itemText: {\n    type: String,\n    default: 'name',\n  },\n  loadChildren: Function as PropType<(item: any) => Promise<void>>,\n  loadingIcon: {\n    type: String,\n    default: '$loading',\n  },\n  offIcon: {\n    type: String,\n    default: '$checkboxOff',\n  },\n  onIcon: {\n    type: String,\n    default: '$checkboxOn',\n  },\n  openOnClick: Boolean,\n  rounded: Boolean,\n  selectable: Boolean,\n  selectedColor: {\n    type: String,\n    default: 'accent',\n  },\n  shaped: Boolean,\n  transition: Boolean,\n  selectionType: {\n    type: String as PropType<'leaf' | 'independent'>,\n    default: 'leaf',\n    validator: (v: string) => ['leaf', 'independent'].includes(v),\n  },\n}\n\n/* @vue/component */\nconst VTreeviewNode = baseMixins.extend<options>().extend({\n  name: 'v-treeview-node',\n\n  inject: {\n    treeview: {\n      default: null,\n    },\n  },\n\n  props: {\n    level: Number,\n    item: {\n      type: Object,\n      default: () => null,\n    } as PropValidator<Record<string, unknown> | null>,\n    parentIsDisabled: Boolean,\n    ...VTreeviewNodeProps,\n  },\n\n  data: () => ({\n    hasLoaded: false,\n    isActive: false, // Node is selected (row)\n    isIndeterminate: false, // Node has at least one selected child\n    isLoading: false,\n    isOpen: false, // Node is open/expanded\n    isSelected: false, // Node is selected (checkbox)\n  }),\n\n  computed: {\n    disabled (): boolean {\n      return (\n        getObjectValueByPath(this.item, this.itemDisabled) ||\n        (this.parentIsDisabled && this.selectionType === 'leaf')\n      )\n    },\n    key (): string {\n      return getObjectValueByPath(this.item, this.itemKey)\n    },\n    children (): any[] | null {\n      const children = getObjectValueByPath(this.item, this.itemChildren)\n      return children && children.filter((child: any) => !this.treeview.isExcluded(getObjectValueByPath(child, this.itemKey)))\n    },\n    text (): string {\n      return getObjectValueByPath(this.item, this.itemText)\n    },\n    scopedProps (): object {\n      return {\n        item: this.item,\n        leaf: !this.children,\n        selected: this.isSelected,\n        indeterminate: this.isIndeterminate,\n        active: this.isActive,\n        open: this.isOpen,\n      }\n    },\n    computedIcon (): string {\n      if (this.isIndeterminate) return this.indeterminateIcon\n      else if (this.isSelected) return this.onIcon\n      else return this.offIcon\n    },\n    hasChildren (): boolean {\n      return !!this.children && (!!this.children.length || !!this.loadChildren)\n    },\n  },\n\n  created () {\n    this.treeview.register(this)\n  },\n\n  beforeDestroy () {\n    this.treeview.unregister(this)\n  },\n\n  methods: {\n    checkChildren (): Promise<void> {\n      return new Promise<void>(resolve => {\n        // TODO: Potential issue with always trying\n        // to load children if response is empty?\n        if (!this.children || this.children.length || !this.loadChildren || this.hasLoaded) return resolve()\n\n        this.isLoading = true\n        resolve(this.loadChildren(this.item))\n      }).then(() => {\n        this.isLoading = false\n        this.hasLoaded = true\n      })\n    },\n    open () {\n      this.isOpen = !this.isOpen\n      this.treeview.updateOpen(this.key, this.isOpen)\n      this.treeview.emitOpen()\n    },\n    genLabel () {\n      const children = []\n\n      if (this.$scopedSlots.label) children.push(this.$scopedSlots.label(this.scopedProps))\n      else children.push(this.text)\n\n      return this.$createElement('div', {\n        slot: 'label',\n        staticClass: 'v-treeview-node__label',\n      }, children)\n    },\n    genPrependSlot () {\n      if (!this.$scopedSlots.prepend) return null\n\n      return this.$createElement('div', {\n        staticClass: 'v-treeview-node__prepend',\n      }, this.$scopedSlots.prepend(this.scopedProps))\n    },\n    genAppendSlot () {\n      if (!this.$scopedSlots.append) return null\n\n      return this.$createElement('div', {\n        staticClass: 'v-treeview-node__append',\n      }, this.$scopedSlots.append(this.scopedProps))\n    },\n    genContent () {\n      const children = [\n        this.genPrependSlot(),\n        this.genLabel(),\n        this.genAppendSlot(),\n      ]\n\n      return this.$createElement('div', {\n        staticClass: 'v-treeview-node__content',\n      }, children)\n    },\n    genToggle () {\n      return this.$createElement(VIcon, {\n        staticClass: 'v-treeview-node__toggle',\n        class: {\n          'v-treeview-node__toggle--open': this.isOpen,\n          'v-treeview-node__toggle--loading': this.isLoading,\n        },\n        slot: 'prepend',\n        on: {\n          click: (e: MouseEvent) => {\n            e.stopPropagation()\n\n            if (this.isLoading) return\n\n            this.checkChildren().then(() => this.open())\n          },\n        },\n      }, [this.isLoading ? this.loadingIcon : this.expandIcon])\n    },\n    genCheckbox () {\n      return this.$createElement(VIcon, {\n        staticClass: 'v-treeview-node__checkbox',\n        props: {\n          color: this.isSelected || this.isIndeterminate ? this.selectedColor : undefined,\n          disabled: this.disabled,\n        },\n        on: {\n          click: (e: MouseEvent) => {\n            e.stopPropagation()\n\n            if (this.isLoading) return\n\n            this.checkChildren().then(() => {\n              // We nextTick here so that items watch in VTreeview has a chance to run first\n              this.$nextTick(() => {\n                this.isSelected = !this.isSelected\n                this.isIndeterminate = false\n\n                this.treeview.updateSelected(this.key, this.isSelected)\n                this.treeview.emitSelected()\n              })\n            })\n          },\n        },\n      }, [this.computedIcon])\n    },\n    genLevel (level: number) {\n      return createRange(level).map(() => this.$createElement('div', {\n        staticClass: 'v-treeview-node__level',\n      }))\n    },\n    genNode () {\n      const children = [this.genContent()]\n\n      if (this.selectable) children.unshift(this.genCheckbox())\n\n      if (this.hasChildren) {\n        children.unshift(this.genToggle())\n      } else {\n        children.unshift(...this.genLevel(1))\n      }\n\n      children.unshift(...this.genLevel(this.level))\n\n      return this.$createElement('div', this.setTextColor(this.isActive && this.color, {\n        staticClass: 'v-treeview-node__root',\n        class: {\n          [this.activeClass]: this.isActive,\n        },\n        on: {\n          click: () => {\n            if (this.openOnClick && this.hasChildren) {\n              this.checkChildren().then(this.open)\n            } else if (this.activatable && !this.disabled) {\n              this.isActive = !this.isActive\n              this.treeview.updateActive(this.key, this.isActive)\n              this.treeview.emitActive()\n            }\n          },\n        },\n      }), children)\n    },\n    genChild (item: any, parentIsDisabled: boolean) {\n      return this.$createElement(VTreeviewNode, {\n        key: getObjectValueByPath(item, this.itemKey),\n        props: {\n          activatable: this.activatable,\n          activeClass: this.activeClass,\n          item,\n          selectable: this.selectable,\n          selectedColor: this.selectedColor,\n          color: this.color,\n          expandIcon: this.expandIcon,\n          indeterminateIcon: this.indeterminateIcon,\n          offIcon: this.offIcon,\n          onIcon: this.onIcon,\n          loadingIcon: this.loadingIcon,\n          itemKey: this.itemKey,\n          itemText: this.itemText,\n          itemDisabled: this.itemDisabled,\n          itemChildren: this.itemChildren,\n          loadChildren: this.loadChildren,\n          transition: this.transition,\n          openOnClick: this.openOnClick,\n          rounded: this.rounded,\n          shaped: this.shaped,\n          level: this.level + 1,\n          selectionType: this.selectionType,\n          parentIsDisabled,\n        },\n        scopedSlots: this.$scopedSlots,\n      })\n    },\n    genChildrenWrapper () {\n      if (!this.isOpen || !this.children) return null\n\n      const children = [this.children.map(c => this.genChild(c, this.disabled))]\n\n      return this.$createElement('div', {\n        staticClass: 'v-treeview-node__children',\n      }, children)\n    },\n    genTransition () {\n      return this.$createElement(VExpandTransition, [this.genChildrenWrapper()])\n    },\n  },\n\n  render (h): VNode {\n    const children: VNodeChildren = [this.genNode()]\n\n    if (this.transition) children.push(this.genTransition())\n    else children.push(this.genChildrenWrapper())\n\n    return h('div', {\n      staticClass: 'v-treeview-node',\n      class: {\n        'v-treeview-node--leaf': !this.hasChildren,\n        'v-treeview-node--click': this.openOnClick,\n        'v-treeview-node--disabled': this.disabled,\n        'v-treeview-node--rounded': this.rounded,\n        'v-treeview-node--shaped': this.shaped,\n        'v-treeview-node--selected': this.isSelected,\n      },\n      attrs: {\n        'aria-expanded': String(this.isOpen),\n      },\n    }, children)\n  },\n})\n\nexport default VTreeviewNode\n"],"sourceRoot":""}]}