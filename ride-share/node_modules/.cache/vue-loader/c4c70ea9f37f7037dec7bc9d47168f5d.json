{"remainingRequest":"/mnt/c/Users/matth/git/cos243/ride-share/node_modules/vue-loader/lib/index.js??vue-loader-options!/mnt/c/Users/matth/git/cos243/ride-share/src/pages/MyRides.vue?vue&type=style&index=0&lang=css&","dependencies":[{"path":"/mnt/c/Users/matth/git/cos243/ride-share/src/pages/MyRides.vue","mtime":1606529499763},{"path":"/mnt/c/Users/matth/git/cos243/ride-share/node_modules/css-loader/dist/cjs.js","mtime":1605643979859},{"path":"/mnt/c/Users/matth/git/cos243/ride-share/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":1605643980647},{"path":"/mnt/c/Users/matth/git/cos243/ride-share/node_modules/postcss-loader/src/index.js","mtime":1605136937849},{"path":"/mnt/c/Users/matth/git/cos243/ride-share/node_modules/cache-loader/dist/cjs.js","mtime":1605136929726},{"path":"/mnt/c/Users/matth/git/cos243/ride-share/node_modules/vue-loader/lib/index.js","mtime":1605643980647}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKLmN1cnJlbnRBY2NvdW50IHsKICBiYWNrZ3JvdW5kOiBsaWdodGNvcmFsOwp9Cg=="},{"version":3,"sources":["MyRides.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAuIA;AACA;AACA","file":"MyRides.vue","sourceRoot":"src/pages","sourcesContent":["<template>\n  <v-container>\n    <div>\n      <h4 class=\"display-1\">My Rides</h4>\n\n      <v-data-table\n        class=\"elevation-1\"\n        v-bind:headers=\"headers\"\n        v-bind:items=\"rides\"\n      >\n        <template v-slot:item=\"{ item }\">\n          <tr v-bind:class=\"itemClass(item)\">\n            <td>{{ item.date }}</td>\n            <td>{{ item.time }}</td>\n            <td>{{ item.distance }}</td>\n            <td>{{ item.fuel_price }}</td>\n            <td>{{ item.fee }}</td>\n            <td>\n              <v-icon small @click=\"deleteRide(item)\">\n                mdi-delete\n              </v-icon>\n              <v-icon v-if=\"isDriver\" small @click=\"updateAccount(item)\">\n                mdi-steering\n              </v-icon>\n            </td>\n          </tr>\n        </template>\n      </v-data-table>\n\n      <v-snackbar v-model=\"snackbar.show\">\n        {{ snackbar.text }}\n        <v-btn color=\"blue\" text @click=\"snackbar.show = false\">\n          Close\n        </v-btn>\n      </v-snackbar>\n    </div>\n  </v-container>\n</template>\n\n<script>\nexport default {\n\n  computed: {\n    isLoggedIn() {\n      return this.$store.getters.isLoggedIn;\n    },\n    isDriver() {\n      return this.$store.getters.isDriver;\n    },\n  },\n\n  name: \"Rides\",\n\n  data: function() {\n    return {\n      headers: [\n        { text: \"Date\", value: \"date\" },\n        { text: \"Time\", value: \"time\" },\n        { text: \"Distance\", value: \"distance\" },\n        { text: \"Fuel Price\", value: \"fuel_price\" },\n        { text: \"Fee\", value: \"fee\" },\n        { text: \"Action\", value: \"action\" }\n      ],\n      rides: [],\n\n      snackbar: {\n        show: false,\n        text: \"\"\n      }\n    };\n  },\n\n  mounted: function() {\n    this.$axios.post(\"/rides\", {\n        passenger_id: this.$store.state.currentAccount.id\n    })\n    .then(response => {\n      this.rides = response.data.map(ride => ({\n        ride_id: ride.ride_id,\n        date: ride.rides.date,\n        time: ride.rides.time,\n        distance: ride.rides.distance,\n        fuel_price: ride.rides.fuel_price,\n        fee: ride.rides.fee,\n      }));\n    });\n  },\n\n  methods: {\n    // Display a snackbar message.\n    showSnackbar(text) {\n      this.snackbar.text = text;\n      this.snackbar.show = true;\n    },\n\n    // Calculate the CSS class for an item\n    itemClass(item) {\n      const currentAccount = this.$store.state.currentAccount;\n      if (currentAccount && currentAccount.id === item.id) {\n        return \"currentAccount\";\n      }\n    },\n\n    deleteRide(item) {\n      console.log(\"UPDATE\", JSON.stringify(item, null, 2));\n      this.$axios.delete(\"/rides\", {\n        passenger_id: this.$store.state.currentAccount.id,\n        ride_id: item.ride_id,\n      })\n      this.showSnackbar(\"Ride removed.\");\n    },\n\n    // Update account information.\n    updateAccount(item) {\n      console.log(\"UPDATE\", JSON.stringify(item, null, 2));\n      this.showSnackbar(\"Sorry, update is not yet implemented.\");\n    },\n\n    // Delete an account.\n    deleteAccount(item) {\n      this.$axios.delete(`/accounts/${item.id}`).then(response => {\n        if (response.data.ok) {\n          // The delete operation worked on the server; delete the local account\n          // by filtering the deleted account from the list of accounts.\n          this.accounts = this.accounts.filter(\n            account => account.id !== item.id\n          );\n        }\n      });\n    }\n  }\n};\n</script>\n\n<style>\n.currentAccount {\n  background: lightcoral;\n}\n</style>\n"]}]}