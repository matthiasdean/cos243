{"remainingRequest":"/mnt/c/Users/matth/git/cos243/ride-share/node_modules/vue-loader/lib/index.js??vue-loader-options!/mnt/c/Users/matth/git/cos243/ride-share/src/pages/Accounts.vue?vue&type=script&lang=js&","dependencies":[{"path":"/mnt/c/Users/matth/git/cos243/ride-share/src/pages/Accounts.vue","mtime":1605643025308},{"path":"/mnt/c/Users/matth/git/cos243/ride-share/node_modules/cache-loader/dist/cjs.js","mtime":1605136929726},{"path":"/mnt/c/Users/matth/git/cos243/ride-share/node_modules/babel-loader/lib/index.js","mtime":1605643974154},{"path":"/mnt/c/Users/matth/git/cos243/ride-share/node_modules/cache-loader/dist/cjs.js","mtime":1605136929726},{"path":"/mnt/c/Users/matth/git/cos243/ride-share/node_modules/vue-loader/lib/index.js","mtime":1605643980647}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmV4cG9ydCBkZWZhdWx0IHsKICBuYW1lOiAiQWNjb3VudHMiLAoKICBkYXRhOiBmdW5jdGlvbigpIHsKICAgIHJldHVybiB7CiAgICAgIGhlYWRlcnM6IFsKICAgICAgICB7IHRleHQ6ICJFbWFpbCIsIHZhbHVlOiAiZW1haWwiIH0sCiAgICAgICAgeyB0ZXh0OiAiRmlyc3QiLCB2YWx1ZTogImZpcnN0TmFtZSIgfSwKICAgICAgICB7IHRleHQ6ICJMYXN0IiwgdmFsdWU6ICJsYXN0TmFtZSIgfSwKICAgICAgICB7IHRleHQ6ICJBY3Rpb24iLCB2YWx1ZTogImFjdGlvbiIgfQogICAgICBdLAogICAgICBhY2NvdW50czogW10sCgogICAgICBzbmFja2JhcjogewogICAgICAgIHNob3c6IGZhbHNlLAogICAgICAgIHRleHQ6ICIiCiAgICAgIH0KICAgIH07CiAgfSwKCiAgbW91bnRlZDogZnVuY3Rpb24oKSB7CiAgICB0aGlzLiRheGlvcy5nZXQoIi9hY2NvdW50cyIpLnRoZW4ocmVzcG9uc2UgPT4gewogICAgICB0aGlzLmFjY291bnRzID0gcmVzcG9uc2UuZGF0YS5tYXAoYWNjb3VudCA9PiAoewogICAgICAgIGlkOiBhY2NvdW50LmlkLAogICAgICAgIGVtYWlsOiBhY2NvdW50LmVtYWlsLAogICAgICAgIGZpcnN0TmFtZTogYWNjb3VudC5maXJzdF9uYW1lLAogICAgICAgIGxhc3ROYW1lOiBhY2NvdW50Lmxhc3RfbmFtZQogICAgICB9KSk7CiAgICB9KTsKICB9LAoKICBtZXRob2RzOiB7CiAgICAvLyBEaXNwbGF5IGEgc25hY2tiYXIgbWVzc2FnZS4KICAgIHNob3dTbmFja2Jhcih0ZXh0KSB7CiAgICAgIHRoaXMuc25hY2tiYXIudGV4dCA9IHRleHQ7CiAgICAgIHRoaXMuc25hY2tiYXIuc2hvdyA9IHRydWU7CiAgICB9LAoKICAgIC8vIENhbGN1bGF0ZSB0aGUgQ1NTIGNsYXNzIGZvciBhbiBpdGVtCiAgICBpdGVtQ2xhc3MoaXRlbSkgewogICAgICBjb25zdCBjdXJyZW50QWNjb3VudCA9IHRoaXMuJHN0b3JlLnN0YXRlLmN1cnJlbnRBY2NvdW50OwogICAgICBpZiAoY3VycmVudEFjY291bnQgJiYgY3VycmVudEFjY291bnQuaWQgPT09IGl0ZW0uaWQpIHsKICAgICAgICByZXR1cm4gImN1cnJlbnRBY2NvdW50IjsKICAgICAgfQogICAgfSwKCiAgICAvLyBVcGRhdGUgYWNjb3VudCBpbmZvcm1hdGlvbi4KICAgIHVwZGF0ZUFjY291bnQoaXRlbSkgewogICAgICBjb25zb2xlLmxvZygiVVBEQVRFIiwgSlNPTi5zdHJpbmdpZnkoaXRlbSwgbnVsbCwgMikpOwogICAgICB0aGlzLnNob3dTbmFja2JhcigiU29ycnksIHVwZGF0ZSBpcyBub3QgeWV0IGltcGxlbWVudGVkLiIpOwogICAgfSwKCiAgICAvLyBEZWxldGUgYW4gYWNjb3VudC4KICAgIGRlbGV0ZUFjY291bnQoaXRlbSkgewogICAgICB0aGlzLiRheGlvcy5kZWxldGUoYC9hY2NvdW50cy8ke2l0ZW0uaWR9YCkudGhlbihyZXNwb25zZSA9PiB7CiAgICAgICAgaWYgKHJlc3BvbnNlLmRhdGEub2spIHsKICAgICAgICAgIC8vIFRoZSBkZWxldGUgb3BlcmF0aW9uIHdvcmtlZCBvbiB0aGUgc2VydmVyOyBkZWxldGUgdGhlIGxvY2FsIGFjY291bnQKICAgICAgICAgIC8vIGJ5IGZpbHRlcmluZyB0aGUgZGVsZXRlZCBhY2NvdW50IGZyb20gdGhlIGxpc3Qgb2YgYWNjb3VudHMuCiAgICAgICAgICB0aGlzLmFjY291bnRzID0gdGhpcy5hY2NvdW50cy5maWx0ZXIoCiAgICAgICAgICAgIGFjY291bnQgPT4gYWNjb3VudC5pZCAhPT0gaXRlbS5pZAogICAgICAgICAgKTsKICAgICAgICB9CiAgICAgIH0pOwogICAgfQogIH0KfTsK"},{"version":3,"sources":["Accounts.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAsCA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Accounts.vue","sourceRoot":"src/pages","sourcesContent":["<template>\n  <v-container>\n    <div>\n      <h4 class=\"display-1\">Accounts</h4>\n\n      <v-data-table\n        class=\"elevation-1\"\n        v-bind:headers=\"headers\"\n        v-bind:items=\"accounts\"\n      >\n        <template v-slot:item=\"{ item }\">\n          <tr v-bind:class=\"itemClass(item)\">\n            <td>{{ item.email }}</td>\n            <td>{{ item.firstName }}</td>\n            <td>{{ item.lastName }}</td>\n            <td>\n              <v-icon small @click=\"deleteAccount(item)\">\n                mdi-delete\n              </v-icon>\n              <v-icon small class=\"ml-2\" @click=\"updateAccount(item)\">\n                mdi-pencil\n              </v-icon>\n            </td>\n          </tr>\n        </template>\n      </v-data-table>\n\n      <v-snackbar v-model=\"snackbar.show\">\n        {{ snackbar.text }}\n        <v-btn color=\"blue\" text @click=\"snackbar.show = false\">\n          Close\n        </v-btn>\n      </v-snackbar>\n    </div>\n  </v-container>\n</template>\n\n<script>\nexport default {\n  name: \"Accounts\",\n\n  data: function() {\n    return {\n      headers: [\n        { text: \"Email\", value: \"email\" },\n        { text: \"First\", value: \"firstName\" },\n        { text: \"Last\", value: \"lastName\" },\n        { text: \"Action\", value: \"action\" }\n      ],\n      accounts: [],\n\n      snackbar: {\n        show: false,\n        text: \"\"\n      }\n    };\n  },\n\n  mounted: function() {\n    this.$axios.get(\"/accounts\").then(response => {\n      this.accounts = response.data.map(account => ({\n        id: account.id,\n        email: account.email,\n        firstName: account.first_name,\n        lastName: account.last_name\n      }));\n    });\n  },\n\n  methods: {\n    // Display a snackbar message.\n    showSnackbar(text) {\n      this.snackbar.text = text;\n      this.snackbar.show = true;\n    },\n\n    // Calculate the CSS class for an item\n    itemClass(item) {\n      const currentAccount = this.$store.state.currentAccount;\n      if (currentAccount && currentAccount.id === item.id) {\n        return \"currentAccount\";\n      }\n    },\n\n    // Update account information.\n    updateAccount(item) {\n      console.log(\"UPDATE\", JSON.stringify(item, null, 2));\n      this.showSnackbar(\"Sorry, update is not yet implemented.\");\n    },\n\n    // Delete an account.\n    deleteAccount(item) {\n      this.$axios.delete(`/accounts/${item.id}`).then(response => {\n        if (response.data.ok) {\n          // The delete operation worked on the server; delete the local account\n          // by filtering the deleted account from the list of accounts.\n          this.accounts = this.accounts.filter(\n            account => account.id !== item.id\n          );\n        }\n      });\n    }\n  }\n};\n</script>\n\n<style>\n.currentAccount {\n  background: lightcoral;\n}\n</style>\n"]}]}